<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
from typing import Callable, List, Optional
=======
from pip._internal.utils.typing import MYPY_CHECK_RUNNING
>>>>>>> 667482d8b430caa0727488b1d1900471cb8d5208
=======
from typing import Callable, Optional
>>>>>>> c67f90bd6d99f24b568e213ed27f14d7420ce66d
=======
from typing import Callable, Optional
>>>>>>> c386aa5fe352f969882abba769ec53b58b48337b

from pip._internal.req.req_install import InstallRequirement
from pip._internal.req.req_set import RequirementSet

InstallRequirementProvider = Callable[
    [str, Optional[InstallRequirement]], InstallRequirement
]


<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
class BaseResolver:
    def resolve(
        self, root_reqs: List[InstallRequirement], check_supported_wheels: bool
    ) -> RequirementSet:
        raise NotImplementedError()

    def get_installation_order(
        self, req_set: RequirementSet
    ) -> List[InstallRequirement]:
=======
class BaseResolver(object):
    def resolve(self, root_reqs, check_supported_wheels):
        # type: (List[InstallRequirement], bool) -> RequirementSet
        raise NotImplementedError()

    def get_installation_order(self, req_set):
        # type: (RequirementSet) -> List[InstallRequirement]
>>>>>>> 667482d8b430caa0727488b1d1900471cb8d5208
=======
class BaseResolver:
    def resolve(
        self, root_reqs: list[InstallRequirement], check_supported_wheels: bool
    ) -> RequirementSet:
        raise NotImplementedError()

    def get_installation_order(
        self, req_set: RequirementSet
    ) -> list[InstallRequirement]:
>>>>>>> c67f90bd6d99f24b568e213ed27f14d7420ce66d
=======
class BaseResolver:
    def resolve(
        self, root_reqs: list[InstallRequirement], check_supported_wheels: bool
    ) -> RequirementSet:
        raise NotImplementedError()

    def get_installation_order(
        self, req_set: RequirementSet
    ) -> list[InstallRequirement]:
>>>>>>> c386aa5fe352f969882abba769ec53b58b48337b
        raise NotImplementedError()
